//
// File generated by rootcint at Thu Sep 26 02:22:22 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIMyAnalysisMakerdIMyAnalysisMaker_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MyAnalysisMaker_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void MyAnalysisMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MyAnalysisMaker(void *p = 0);
   static void *newArray_MyAnalysisMaker(Long_t size, void *p);
   static void delete_MyAnalysisMaker(void *p);
   static void deleteArray_MyAnalysisMaker(void *p);
   static void destruct_MyAnalysisMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyAnalysisMaker*)
   {
      ::MyAnalysisMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyAnalysisMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyAnalysisMaker", ::MyAnalysisMaker::Class_Version(), ".sl73_gcc485/obj/StRoot/MyAnalysisMaker/MyAnalysisMaker.h", 47,
                  typeid(::MyAnalysisMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyAnalysisMaker::Dictionary, isa_proxy, 4,
                  sizeof(::MyAnalysisMaker) );
      instance.SetNew(&new_MyAnalysisMaker);
      instance.SetNewArray(&newArray_MyAnalysisMaker);
      instance.SetDelete(&delete_MyAnalysisMaker);
      instance.SetDeleteArray(&deleteArray_MyAnalysisMaker);
      instance.SetDestructor(&destruct_MyAnalysisMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyAnalysisMaker*)
   {
      return GenerateInitInstanceLocal((::MyAnalysisMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyAnalysisMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr MyAnalysisMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyAnalysisMaker::Class_Name()
{
   return "MyAnalysisMaker";
}

//______________________________________________________________________________
const char *MyAnalysisMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyAnalysisMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyAnalysisMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyAnalysisMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyAnalysisMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyAnalysisMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyAnalysisMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyAnalysisMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void MyAnalysisMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyAnalysisMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MyAnalysisMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(MyAnalysisMaker::Class(),this);
   }
}

//______________________________________________________________________________
void MyAnalysisMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyAnalysisMaker.
      TClass *R__cl = ::MyAnalysisMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*chain", &chain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*n", &n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histogram_output", &histogram_output);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEventsProcessed", &mEventsProcessed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name[60]", name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pi", &Pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refMult2", &refMult2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nProton", &nProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nParticle", &nParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "num_particle_1", &num_particle_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "num_particle_2", &num_particle_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "num_particle_3", &num_particle_3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "num_particle_4", &num_particle_4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "num_particle_5", &num_particle_5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "num_particle_6", &num_particle_6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cent", &cent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio", &ratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Psi", &Psi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refMult", &refMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofmult", &tofmult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "check", &check);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phibin", &phibin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beta", &beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dca", &dca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nsigma", &nsigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CurrentEvent_centrality", &CurrentEvent_centrality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CurrentEvent_Psi", &CurrentEvent_Psi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CurrentEvent_nProton", &CurrentEvent_nProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CurrentEvent_ProtonPhi[10000]", CurrentEvent_ProtonPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BufferPointer", &BufferPointer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BufferEvent_NEvents[100]", BufferEvent_NEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BufferEvent_Full[100]", BufferEvent_Full);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BufferEvent_Psi[10000]", BufferEvent_Psi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BufferEvent_nProton[10000]", BufferEvent_nProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BufferEvent_ProtonPhi[10000][10000]", BufferEvent_ProtonPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iran", &iran);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EventCount", &EventCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htr", &htr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hnParticle[5][16]", &hnParticle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hratio[5][16]", &hratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hnParticle1[5][16]", &hnParticle1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_p1[5][16]", &h_p1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_p2[5][16]", &h_p2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_p3[5][16]", &h_p3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_p4[5][16]", &h_p4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_p5[5][16]", &h_p5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_p6[5][16]", &h_p6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_p7[5][16]", &h_p7);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_p8[5][16]", &h_p8);
      StMaker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyAnalysisMaker(void *p) {
      return  p ? new(p) ::MyAnalysisMaker : new ::MyAnalysisMaker;
   }
   static void *newArray_MyAnalysisMaker(Long_t nElements, void *p) {
      return p ? new(p) ::MyAnalysisMaker[nElements] : new ::MyAnalysisMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyAnalysisMaker(void *p) {
      delete ((::MyAnalysisMaker*)p);
   }
   static void deleteArray_MyAnalysisMaker(void *p) {
      delete [] ((::MyAnalysisMaker*)p);
   }
   static void destruct_MyAnalysisMaker(void *p) {
      typedef ::MyAnalysisMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MyAnalysisMaker

/********************************************************
* .sl73_gcc485/obj/StRoot/MyAnalysisMaker/MyAnalysisMaker_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMyAnalysisMaker_Cint();

extern "C" void G__set_cpp_environmentMyAnalysisMaker_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MyAnalysisMaker.h");
  G__cpp_reset_tagtableMyAnalysisMaker_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevMyAnalysisMaker_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MyAnalysisMaker */
static int G__MyAnalysisMaker_Cint_654_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyAnalysisMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyAnalysisMaker((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MyAnalysisMaker((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MyAnalysisMaker[n];
       } else {
         p = new((void*) gvp) MyAnalysisMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new MyAnalysisMaker;
       } else {
         p = new((void*) gvp) MyAnalysisMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((MyAnalysisMaker*) G__getstructoffset())->doLoop((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((MyAnalysisMaker*) G__getstructoffset())->doLoop((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MyAnalysisMaker*) G__getstructoffset())->getCentrality((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MyAnalysisMaker*) G__getstructoffset())->getPhiBin((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyAnalysisMaker*) G__getstructoffset())->declareHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyAnalysisMaker*) G__getstructoffset())->FillHistograms((float) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyAnalysisMaker*) G__getstructoffset())->writeHistograms();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyAnalysisMaker*) G__getstructoffset())->makeMixedPairs((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyAnalysisMaker*) G__getstructoffset())->copyCurrentToBuffer((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyAnalysisMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyAnalysisMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyAnalysisMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyAnalysisMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyAnalysisMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyAnalysisMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyAnalysisMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyAnalysisMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MyAnalysisMaker_Cint_654_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyAnalysisMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MyAnalysisMaker_Cint_654_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyAnalysisMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyAnalysisMaker(*(MyAnalysisMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyAnalysisMaker G__TMyAnalysisMaker;
static int G__MyAnalysisMaker_Cint_654_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyAnalysisMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyAnalysisMaker*) (soff+(sizeof(MyAnalysisMaker)*i)))->~G__TMyAnalysisMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyAnalysisMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyAnalysisMaker*) (soff))->~G__TMyAnalysisMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MyAnalysisMaker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMyAnalysisMaker_Cint {
 public:
  G__Sizep2memfuncMyAnalysisMaker_Cint(): p(&G__Sizep2memfuncMyAnalysisMaker_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMyAnalysisMaker_Cint::*p)();
};

size_t G__get_sizep2memfuncMyAnalysisMaker_Cint()
{
  G__Sizep2memfuncMyAnalysisMaker_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMyAnalysisMaker_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker))) {
     MyAnalysisMaker *G__Lderived;
     G__Lderived=(MyAnalysisMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker),G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker),G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker),G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker),G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMyAnalysisMaker_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MyAnalysisMaker */
static void G__setup_memvarMyAnalysisMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker));
   { MyAnalysisMaker *p; p=(MyAnalysisMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TChain),-1,-1,2,"chain=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TFile),-1,-1,2,"n=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TFile),-1,-1,4,"histogram_output=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mEventsProcessed=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"name[60]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"refMult2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nProton=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nParticle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"num_particle_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"num_particle_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"num_particle_3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"num_particle_4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"num_particle_5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"num_particle_6=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"cent=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ratio=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Psi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"refMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"tofmult=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"check=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"phibin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"p=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"dca=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nsigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"CurrentEvent_centrality=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"CurrentEvent_Psi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"CurrentEvent_nProton=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"CurrentEvent_ProtonPhi[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"BufferPointer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"BufferEvent_NEvents[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"BufferEvent_Full[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"BufferEvent_Psi[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"BufferEvent_nProton[10000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"BufferEvent_ProtonPhi[10000][10000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"iran=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TH1F),-1,-1,4,"EventCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TH2F),-1,-1,4,"htr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TH1F),-1,-1,4,"hnParticle[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TH1F),-1,-1,4,"hratio[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TH1F),-1,-1,4,"hnParticle1[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TProfile),-1,-1,4,"h_p1[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TProfile),-1,-1,4,"h_p2[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TProfile),-1,-1,4,"h_p3[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TProfile),-1,-1,4,"h_p4[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TProfile),-1,-1,4,"h_p5[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TProfile),-1,-1,4,"h_p6[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TProfile),-1,-1,4,"h_p7[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TProfile),-1,-1,4,"h_p8[5][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMyAnalysisMaker_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMyAnalysisMaker(void) {
   /* MyAnalysisMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker));
   G__memfunc_setup("MyAnalysisMaker",1530,G__MyAnalysisMaker_Cint_654_0_1, 105, G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker), -1, 0, 1, 1, 1, 0, "C - - 10 '\"Loop\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doLoop",621,G__MyAnalysisMaker_Cint_654_0_2, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"C - - 0 - inputfile C - - 0 - outname "
"i - - 0 '14' energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCentrality",1375,G__MyAnalysisMaker_Cint_654_0_3, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - - 0 - refmult2 d - - 0 - energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhiBin",890,G__MyAnalysisMaker_Cint_654_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("declareHistograms",1777,G__MyAnalysisMaker_Cint_654_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHistograms",1448,G__MyAnalysisMaker_Cint_654_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - - 0 - ratio i - - 0 - refMult "
"i - - 0 - i i - - 0 - cent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHistograms",1612,G__MyAnalysisMaker_Cint_654_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeMixedPairs",1428,G__MyAnalysisMaker_Cint_654_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - bufferPointer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyCurrentToBuffer",1979,G__MyAnalysisMaker_Cint_654_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - bufferPointer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MyAnalysisMaker_Cint_654_0_10, 85, G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyAnalysisMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MyAnalysisMaker_Cint_654_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyAnalysisMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MyAnalysisMaker_Cint_654_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyAnalysisMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MyAnalysisMaker_Cint_654_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyAnalysisMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MyAnalysisMaker_Cint_654_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MyAnalysisMaker_Cint_654_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyAnalysisMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MyAnalysisMaker_Cint_654_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyAnalysisMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MyAnalysisMaker_Cint_654_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyAnalysisMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MyAnalysisMaker_Cint_654_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyAnalysisMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MyAnalysisMaker", 1530, G__MyAnalysisMaker_Cint_654_0_22, (int) ('i'), G__get_linked_tagnum(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker), -1, 0, 1, 1, 1, 0, "u 'MyAnalysisMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyAnalysisMaker", 1656, G__MyAnalysisMaker_Cint_654_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMyAnalysisMaker_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMyAnalysisMaker_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMyAnalysisMaker_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MyAnalysisMaker_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TDataSet = { "TDataSet" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_StMaker = { "StMaker" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__MyAnalysisMaker_CintLN_MyAnalysisMaker = { "MyAnalysisMaker" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMyAnalysisMaker_Cint() {
  G__MyAnalysisMaker_CintLN_TClass.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TBuffer.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TMemberInspector.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TObject.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TNamed.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TDataSet.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TH1F.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TFile.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TChain.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_StMaker.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TProfile.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_TH2F.tagnum = -1 ;
  G__MyAnalysisMaker_CintLN_MyAnalysisMaker.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMyAnalysisMaker_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TDataSet);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TFile);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TChain);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_StMaker);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TProfile);
   G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_TH2F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MyAnalysisMaker_CintLN_MyAnalysisMaker),sizeof(MyAnalysisMaker),-1,324864,"Macro for CINT compatability",G__setup_memvarMyAnalysisMaker,G__setup_memfuncMyAnalysisMaker);
}
extern "C" void G__cpp_setupMyAnalysisMaker_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupMyAnalysisMaker_Cint()");
  G__set_cpp_environmentMyAnalysisMaker_Cint();
  G__cpp_setup_tagtableMyAnalysisMaker_Cint();

  G__cpp_setup_inheritanceMyAnalysisMaker_Cint();

  G__cpp_setup_typetableMyAnalysisMaker_Cint();

  G__cpp_setup_memvarMyAnalysisMaker_Cint();

  G__cpp_setup_memfuncMyAnalysisMaker_Cint();
  G__cpp_setup_globalMyAnalysisMaker_Cint();
  G__cpp_setup_funcMyAnalysisMaker_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMyAnalysisMaker_Cint();
  return;
}
class G__cpp_setup_initMyAnalysisMaker_Cint {
  public:
    G__cpp_setup_initMyAnalysisMaker_Cint() { G__add_setup_func("MyAnalysisMaker_Cint",(G__incsetup)(&G__cpp_setupMyAnalysisMaker_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMyAnalysisMaker_Cint() { G__remove_setup_func("MyAnalysisMaker_Cint"); }
};
G__cpp_setup_initMyAnalysisMaker_Cint G__cpp_setup_initializerMyAnalysisMaker_Cint;

